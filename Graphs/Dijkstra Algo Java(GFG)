class Solution
{
    static int minDist(int dist[], boolean set[]) 
    { 
        // Initialize min value 
        int min = Integer.MAX_VALUE, min_index = -1; 
        int V=dist.length;
        for (int v = 0; v < V; v++) 
            if (set[v] == false && dist[v] <= min) { 
                min = dist[v]; 
                min_index = v; 
            } 
  
        return min_index; 
    } 
    
    static void dijkstra(ArrayList<ArrayList<Integer>> list, int src, int v)
    {
        // Write your code here
        int[] dist=new int[v];
        boolean[] set=new boolean[v];
        for (int i = 0; i < v; i++) { 
            dist[i] = Integer.MAX_VALUE; 
            set[i] = false; 
        } 
        dist[src]=0;
        for(int c=0;c<v-1;c++){
            int u=minDist(dist,set);
            set[u]=true;
            for(int j=0;j<v;j++){
                if (!set[j] && list.get(u).get(j) != 0 && dist[u] != Integer.MAX_VALUE && dist[u] + list.get(u).get(j) < dist[j]) 
                    dist[j] = dist[u] + list.get(u).get(j); 
        
            }
        }
        for(int i=0;i<v;i++){
            System.out.print(dist[i]+" ");
        }
        
    }
}

